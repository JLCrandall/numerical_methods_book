(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    236199,       5172]
NotebookOptionsPosition[    232518,       5054]
NotebookOutlinePosition[    233813,       5094]
CellTagsIndexPosition[    233733,       5089]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Roots of polynomials", "Section",
 CellChangeTimes->{{3.494126015926981*^9, 3.4941260207016*^9}}],

Cell[TextData[{
 "Consider the following polynomial:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "n"], 
      SuperscriptBox["x", "n"]}], "+", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"n", "-", "1"}]], 
      SuperscriptBox["x", 
       RowBox[{"n", "-", "1"}]]}], "+", "\[Ellipsis]", "+", 
     RowBox[{
      SubscriptBox["a", "1"], "x"}], "+", 
     SubscriptBox["a", "o"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\nWe know that this polynomial with have ",
 StyleBox["n",
  FontSlant->"Italic"],
 " roots.  These roots may be complex and may have multiplicity greater than \
1.  If we take an initial guess to one of the roots, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "we can use the process of ",
 StyleBox["synthetic division",
  FontSlant->"Italic"],
 " to factor the equation into the following form:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", 
        SubscriptBox["x", "0"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["b", "n"], 
         SuperscriptBox["x", 
          RowBox[{"n", "-", "1"}]]}], "+", 
        RowBox[{
         SubscriptBox["b", 
          RowBox[{"n", "-", "1"}]], 
         SuperscriptBox["x", 
          RowBox[{"n", "-", "2"}]]}], "+", "\[Ellipsis]", "+", 
        RowBox[{
         SubscriptBox["b", "2"], "x"}], "+", 
        SubscriptBox["b", "1"]}], ")"}]}], "+", 
     SubscriptBox["b", "0"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\nOr we let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Q", "(", "x", ")"}], " ", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["b", "n"], 
      SuperscriptBox["x", 
       RowBox[{"n", "-", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["b", 
       RowBox[{"n", "-", "1"}]], 
      SuperscriptBox["x", 
       RowBox[{"n", "-", "2"}]]}], "+", "\[Ellipsis]", "+", 
     RowBox[{
      SubscriptBox["b", "2"], "x"}], "+", 
     SubscriptBox["b", "1"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  we have:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", 
        SubscriptBox["x", "0"]}], ")"}], 
      RowBox[{"Q", "(", "x", ")"}]}], "+", 
     SubscriptBox["b", "0"]}]}], TraditionalForm]]],
 "  (*)\n\t\nLet's take the first derivative of (*), we get\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"Q", "(", "x", ")"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", 
        SubscriptBox["x", "0"]}], ")"}], 
      RowBox[{"Q", "'"}], 
      RowBox[{"(", "x", ")"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  and\n\t\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "0"], ")"}]}], "=", 
    RowBox[{"Q", "(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\nwe have enough information to solve for one iteration of the root \
near ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "using Newton's method:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "-", 
      FractionBox[
       RowBox[{"P", "(", 
        SubscriptBox["x", "0"], ")"}], 
       RowBox[{
        RowBox[{"P", "'"}], 
        RowBox[{"(", 
         SubscriptBox["x", "0"], ")"}]}]]}], "=", 
     RowBox[{
      SubscriptBox["x", "0"], "-", 
      FractionBox[
       SubscriptBox["b", "0"], 
       RowBox[{"Q", "(", 
        SubscriptBox["x", "0"], ")"}]]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.4941999395688543`*^9, 3.494200213360964*^9}, {
   3.494200266810553*^9, 3.494200290178185*^9}, {3.4942003253151417`*^9, 
   3.494200398944394*^9}, {3.494200510455007*^9, 3.494200590371046*^9}, 
   3.49420096427671*^9, {3.494201497636544*^9, 3.494201648250964*^9}, {
   3.4942095708399143`*^9, 3.494209575150601*^9}}],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Synthetic Division", "Section",
 CellChangeTimes->{{3.4942016610341463`*^9, 3.4942016654080763`*^9}}],

Cell[TextData[{
 "We will perform the synthetic division by creating a table as follows:\n\n\t\
",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      SubscriptBox["x", "0"], "|", 
      SubscriptBox["a", "n"], 
      SubscriptBox["a", 
       RowBox[{"n", "-", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"n", "-", "2"}]], 
      RowBox[{" ", "\[CenterEllipsis]"}], 
      SubscriptBox["a", "0"]},
     {" ", "|", "0", 
      RowBox[{
       SubscriptBox["b", "n"], 
       SubscriptBox["x", "0"]}], 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"n", "-", "1"}]], 
       SubscriptBox["x", "0"]}], "\[CenterEllipsis]", 
      RowBox[{
       SubscriptBox["b", "1"], 
       SubscriptBox["x", "0"]}]},
     {"-", "|", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", "-"}]}]}], 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", "--"}]}]}]}]}]}]}], 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", "--"}]}]}]}]}]}]}]}], 
      RowBox[{"--", 
       RowBox[{"--", "--"}]}], 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", "--"}]}]}]}]},
     {
      RowBox[{
       RowBox[{"Q", "(", "x", ")"}], "+", 
       SubscriptBox["b", "0"], " "}], "|", 
      RowBox[{
       SubscriptBox["b", "n"], "=", 
       SubscriptBox["a", "n"]}], 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"n", "-", "1"}]], "=", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"n", "-", "1"}]], "+", 
        RowBox[{
         SubscriptBox["b", "n"], 
         SubscriptBox["x", "0"]}]}]}], 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"n", "-", "2"}]], "=", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"n", "-", "2"}]], "+", 
        RowBox[{
         SubscriptBox["b", 
          RowBox[{"n", "-", "1"}]], 
         SubscriptBox["x", "0"]}]}]}], "\[CenterEllipsis]", 
      RowBox[{
       SubscriptBox["b", "0"], "=", 
       RowBox[{
        SubscriptBox["a", "1"], "+", 
        RowBox[{
         SubscriptBox["b", "2"], 
         SubscriptBox["x", "0"]}]}]}]}
    }], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.494201671072373*^9, 3.494201691560733*^9}, {
  3.4942017655806513`*^9, 3.494202098192376*^9}, {3.4942021594074*^9, 
  3.4942022557605247`*^9}, {3.494202288000947*^9, 3.494202348022581*^9}, {
  3.494202434476933*^9, 3.494202441175766*^9}}],

Cell[TextData[{
 "So if we perform this procedure on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " we find that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     SubscriptBox["x", "0"], ")"}], "=", 
    SubscriptBox["b", "0"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the result in the lower right corner.  We can find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "0"], ")"}]}], "=", 
    RowBox[{"Q", "(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in a similar fashion by performing the synthetic division on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.494202454385653*^9, 3.4942026106890087`*^9}, 
   3.494209883411954*^9}],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Horner's method (pseudocode)", "Section",
 CellChangeTimes->{{3.4942034702530613`*^9, 3.494203505963291*^9}, {
  3.494205929733582*^9, 3.49420593091706*^9}}],

Cell[TextData[{
 "The numerical automation of this synthetic division procedure is called \
Horner's method.  The pseudocode for this procedure is given below:\n\nTo \
evaluate the polynomial ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "n"], 
      SuperscriptBox["x", "n"]}], "+", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"n", "-", "1"}]], 
      SuperscriptBox["x", 
       RowBox[{"n", "-", "1"}]]}], "+", "\[Ellipsis]", "+", 
     RowBox[{
      SubscriptBox["a", "1"], "x"}], "+", 
     SubscriptBox["a", "o"]}]}], TraditionalForm]]],
 " and it's derivative at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "."}], TraditionalForm]]],
 "  We will input the coefficients ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "0"], ",", 
    SubscriptBox["a", "1"], ",", "\[Ellipsis]", ",", 
    RowBox[{
     SubscriptBox["a", "n"], ";", " ", 
     SubscriptBox["x", "0"]}]}], TraditionalForm]]],
 " and the function will return ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     SubscriptBox["x", "0"], ")"}], " ", "and", " ", 
    RowBox[{"P", "'"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 ".\n\nStep 1.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SubscriptBox["a", "n"]}], TraditionalForm]]],
 "  (will become ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    SubscriptBox["x", "0"], ")"}], TraditionalForm]]],
 ")\nStep 2.  Set z = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]]],
 "  (will become ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "'"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 ")\n\nStep 3.  For ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"j", "=", 
     RowBox[{"n", "-", "1"}]}], ",", 
    RowBox[{"n", "-", "2"}], ",", "\[Ellipsis]", ",", "1"}], 
   TraditionalForm]]],
 "  do Steps 4-5\n\tStep 4.  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "y"}], "+", 
     SubscriptBox["a", "j"]}]}], TraditionalForm]]],
 "\n\tStep 5.  z = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "0"], "z"}], "+", "y"}], TraditionalForm]]],
 "\n\t\nStep 6.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], "y"}], "+", 
     SubscriptBox["a", "0"]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.494203479530011*^9, 3.4942035441637363`*^9}, {
   3.4942036005021267`*^9, 3.494203656168091*^9}, {3.494203773954434*^9, 
   3.494204111763811*^9}, {3.494205936301571*^9, 3.494205938033855*^9}, 
   3.494209900806602*^9, {3.495478544958994*^9, 3.495478545984955*^9}}],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Deflation", "Section",
 CellChangeTimes->{{3.494208306131091*^9, 3.4942083074970417`*^9}}],

Cell[TextData[{
 "Once Newton's method converges to some tolerance we are left with the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " iteration which we say approximates one of the roots of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  Then,\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "N"]}], ")"}], 
       RowBox[{"Q", "(", "x", ")"}]}], "+", 
      SubscriptBox["b", "0"]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "N"]}], ")"}], 
        RowBox[{"Q", "(", "x", ")"}]}], "+", 
       RowBox[{"P", "(", 
        SubscriptBox["x", "N"], ")"}]}], "\[TildeTilde]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "N"]}], ")"}], 
       RowBox[{"Q", "(", "x", ")"}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\nSo ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", "-", 
     SubscriptBox["x", "N"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is an approximate factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  If we let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["x", "^"], "1"], "=", 
    SubscriptBox["x", "N"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "we can say,\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "x", ")"}], "\[TildeTilde]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox[
        OverscriptBox["x", "^"], "1"]}], ")"}], 
     RowBox[{
      SubscriptBox["Q", "1"], "(", "x", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\nWe can find a second approximate root of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by applying Newton's method to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Q", "1"], "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", which will yield the equation:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "x", ")"}], "\[TildeTilde]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox[
        OverscriptBox["x", "^"], "1"]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox[
        OverscriptBox["x", "^"], "2"]}], ")"}], 
     RowBox[{
      SubscriptBox["Q", "2"], "(", "x", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\nWe can continue this procedure until ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Q", 
     RowBox[{"n", "-", "2"}]], "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is formed and then solve the resulting second order polynomial with the \
quadratic equation.  The method outlined above will work to find the roots of \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " even if the roots are complex numbers if complex arithmetic is used from \
the beginning in performing the synthetic division.  For our applications we \
will not consider any polynomials with more than one conjugate pair of \
complex roots (which we can find with the quadratic formula).  The technique \
outlined above is called deflation."
}], "Text",
 CellChangeTimes->{{3.4942084350621*^9, 3.494208495022724*^9}, {
  3.494208529238872*^9, 3.4942086491608067`*^9}, {3.494208696462785*^9, 
  3.494208700096704*^9}, {3.494208742098034*^9, 3.494208835664318*^9}, {
  3.4942088926717987`*^9, 3.494209056733399*^9}, {3.4942091427178707`*^9, 
  3.494209189595587*^9}, {3.4942092204772987`*^9, 3.494209382049356*^9}, {
  3.494209905180089*^9, 3.494209909168919*^9}}],

Cell["", "Text"],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["M\[UDoubleDot]ller's method", "Section",
 CellChangeTimes->{3.494463056921504*^9}],

Cell[TextData[{
 "M\[UDoubleDot]ller's method is a generalization of the secant method.  \
Instead of doing a linear interpolation between two points we do a quadratic \
interpolation between three points.  M\[UDoubleDot]ller's method can be used \
to solve for the root of an arbitrary function much like Newton's method or \
Secant method, but it is particularly useful in solving for roots of \
polynomials.  Since we are essentially solving the quadratic equation each \
time we can easily find complex roots.  If using Newton's method an initial \
guess that is a real number will only converge to real numbers; however, when \
using M\[UDoubleDot]ller's method an initial guess that is a real number will \
converge to a complex root if it is the closest.  Let us consider the \
quadratic polynomial (the equation of a parabola).\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "(", 
       RowBox[{"x", "-", 
        SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
     RowBox[{"b", "(", 
      RowBox[{"x", "-", 
       SubscriptBox["x", "2"]}], ")"}], "+", "c"}]}], TraditionalForm]]],
 "\n\t\nthat passes through the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["x", "0"], ",", 
      RowBox[{"f", "(", 
       SubscriptBox["x", "0"], ")"}]}], ")"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["x", "1"], ",", 
      RowBox[{"f", "(", 
       SubscriptBox["x", "1"], ")"}]}], ")"}], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       RowBox[{"f", "(", 
        SubscriptBox["x", "2"], ")"}]}], ")"}]}]}], TraditionalForm]]],
 ".  The constants ",
 StyleBox["a,",
  FontSlant->"Italic"],
 " ",
 StyleBox["b",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["c ",
  FontSlant->"Italic"],
 "can be determined by the conditions:\n\n\t",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", 
      SubscriptBox["x", "0"], ")"}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"a", "(", 
        RowBox[{
         SubscriptBox["x", "0"], "-", 
         SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
      RowBox[{"b", "(", 
       RowBox[{
        SubscriptBox["x", "0"], "-", 
        SubscriptBox["x", "2"]}], ")"}], "+", "c"}]}], 
    "\[IndentingNewLine]"}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", 
      SubscriptBox["x", "1"], ")"}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"a", "(", 
        RowBox[{
         SubscriptBox["x", "1"], "-", 
         SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
      RowBox[{"b", "(", 
       RowBox[{
        SubscriptBox["x", "1"], "-", 
        SubscriptBox["x", "2"]}], ")"}], "+", "c"}]}], 
    "\[IndentingNewLine]"}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "2"], ")"}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "(", 
       RowBox[{
        SubscriptBox["x", "2"], "-", 
        SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
     RowBox[{"b", "(", 
      RowBox[{
       SubscriptBox["x", "2"], "-", 
       SubscriptBox["x", "2"]}], ")"}], "+", "c"}]}], TraditionalForm]}]],
 "\n\t\nSolving these equation simultaneously for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ",", " ", "b", ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"c", "."}]}]}], TraditionalForm]]],
 "  We have:\n\n\t",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["x", "0"], "-", 
           SubscriptBox["x", "2"]}], ")"}], "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "(", 
           SubscriptBox["x", "1"], ")"}], "-", 
          RowBox[{"f", "(", 
           SubscriptBox["x", "2"], ")"}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["x", "1"], "-", 
           SubscriptBox["x", "2"]}], ")"}], "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "(", 
           SubscriptBox["x", "0"], ")"}], "-", 
          RowBox[{"f", "(", 
           SubscriptBox["x", "2"], ")"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "0"], "-", 
         SubscriptBox["x", "2"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "-", 
         SubscriptBox["x", "2"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "0"], "-", 
         SubscriptBox["x", "1"]}], ")"}]}]]}], "\[IndentingNewLine]"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"b", "=", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "-", 
         SubscriptBox["x", "2"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "(", 
          SubscriptBox["x", "0"], ")"}], "-", 
         RowBox[{"f", "(", 
          SubscriptBox["x", "2"], ")"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "0"], "-", 
         SubscriptBox["x", "2"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "(", 
          SubscriptBox["x", "1"], ")"}], "-", 
         RowBox[{"f", "(", 
          SubscriptBox["x", "2"], ")"}]}], ")"}]}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "0"], "-", 
        SubscriptBox["x", "2"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "1"], "-", 
        SubscriptBox["x", "2"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "0"], "-", 
        SubscriptBox["x", "1"]}], ")"}]}]]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"c", " ", "=", " ", 
    RowBox[{"f", "(", 
     SubscriptBox["x", "2"], ")"}]}], TraditionalForm]}]],
 "\n\t\nBecause of roundoff error problems that result from subtracting \
nearly equal numbers we apply the quadratic formula in a slightly different \
way, a root of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "x", ")"}], TraditionalForm]]],
 " is:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "-", 
     SubscriptBox["x", "2"]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "3"], "-", 
      SubscriptBox["x", "2"]}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "c"}], 
      RowBox[{"b", "\[PlusMinus]", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", "a", " ", "c"}]}]]}]]}]}], TraditionalForm]]],
 "\n\t\nThis gives two possibilities for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]]],
 ", depending on the sign preceding the radical.  We will force the sign \
preceding the radical to be the same as the sign of ",
 StyleBox["b",
  FontSlant->"Italic"],
 " so that the denominator will be largest in magnitude and will result in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]]],
 "being selected as the closest zero of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "x", ")"}], TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]]],
 ".\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "3"], "=", 
    RowBox[{
     SubscriptBox["x", "2"], "-", 
     FractionBox[
      RowBox[{"2", " ", "c"}], 
      RowBox[{"b", "+", 
       RowBox[{
        RowBox[{"sign", "(", "b", ")"}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox["b", "2"], "-", 
          RowBox[{"4", " ", "a", " ", "c"}]}]]}]}]]}]}], TraditionalForm]]],
 "\n\t\nOnce ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]]],
 " is determined we set start the procedure over, this time using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], ",", 
    SubscriptBox["x", "2"], ",", " ", 
    RowBox[{"and", " ", 
     SubscriptBox["x", "3"]}]}], TraditionalForm]]],
 " in place of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], ",", 
    SubscriptBox["x", "1"], ",", " ", 
    RowBox[{"and", " ", 
     SubscriptBox["x", "2"]}]}], TraditionalForm]]],
 " until some convergence criterion has been met.  You can see that if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["b", "2"], "-", 
     RowBox[{"4", " ", "a", " ", "c"}]}], " ", "<", " ", "0"}], 
   TraditionalForm]]],
 ", this method will result in a complex root."
}], "Text",
 CellChangeTimes->{{3.494463060848838*^9, 3.494463107760337*^9}, {
  3.494463151265658*^9, 3.4944632724318523`*^9}, {3.494463327564591*^9, 
  3.494463428847013*^9}, {3.494463493711224*^9, 3.494463931660344*^9}, {
  3.494463999098804*^9, 3.494464112112351*^9}, {3.494464286879941*^9, 
  3.494464769755048*^9}, {3.494466133213819*^9, 3.494466141711656*^9}, {
  3.4946990307534513`*^9, 3.494699031701291*^9}}],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["M\[UDoubleDot]ller's method examples", "Section",
 CellChangeTimes->{{3.4944622146083384`*^9, 3.494462218886602*^9}, {
  3.4944630422490177`*^9, 3.4944630434950647`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "-", 
    SuperscriptBox["x", "3"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xRange", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.5"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x2", "=", "0.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"xRange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"xRange", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x0", "]"}], "==", 
         RowBox[{
          RowBox[{"c1", " ", 
           SuperscriptBox["x0", "2"]}], "+", 
          RowBox[{"c2", " ", "x0"}], "+", "c3"}]}], ",", 
        RowBox[{
         RowBox[{"f", "[", "x1", "]"}], "==", 
         RowBox[{
          RowBox[{"c1", " ", 
           SuperscriptBox["x1", "2"]}], "+", 
          RowBox[{"c2", " ", "x1"}], "+", "c3"}]}], ",", 
        RowBox[{
         RowBox[{"f", "[", "x2", "]"}], "==", 
         RowBox[{
          RowBox[{"c1", " ", 
           SuperscriptBox["x2", "2"]}], "+", 
          RowBox[{"c2", " ", "x2"}], "+", "c3"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}]}], "]"}], "//", 
    "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"c1", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"c2", " ", "x"}], "+", "c3"}], "/.", "sol"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f1", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"xRange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"xRange", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lines", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x0", ",", 
            RowBox[{"f", "[", "x0", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"f", "[", "x1", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", 
            RowBox[{"f", "[", "x2", "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"textAB", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         SubscriptBox["\"\<x\>\"", "0"], ",", 
         RowBox[{"{", 
          RowBox[{"x0", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"x0", ">", "0.865474"}], ",", "0.1", ",", 
             RowBox[{
              RowBox[{"f", "[", "x0", "]"}], "+", "0.1"}]}], "]"}]}], "}"}]}],
         "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         SubscriptBox["\"\<x\>\"", "1"], ",", 
         RowBox[{"{", 
          RowBox[{"x1", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"x1", ">", "0.865474"}], ",", "0.1", ",", 
             RowBox[{
              RowBox[{"f", "[", "x1", "]"}], "+", "0.1"}]}], "]"}]}], "}"}]}],
         "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         SubscriptBox["\"\<x\>\"", "2"], ",", 
         RowBox[{"{", 
          RowBox[{"x2", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"x2", ">", "0.865474"}], ",", "0.1", ",", 
             RowBox[{
              RowBox[{"f", "[", "x2", "]"}], "+", "0.1"}]}], "]"}]}], "}"}]}],
         "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"animatePlot", "=", 
    RowBox[{"{", 
     RowBox[{"Show", "[", 
      RowBox[{"plot1", ",", "plot2", ",", "lines", ",", "textAB", ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", 
   RowBox[{"x1", "-", "x0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", 
   RowBox[{"x2", "-", "x1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", "x1", "]"}], "-", 
      RowBox[{"f", "[", "x0", "]"}]}], ")"}], "/", "h1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", "x2", "]"}], "-", 
      RowBox[{"f", "[", "x1", "]"}]}], ")"}], "/", "h2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"h2", "+", "h1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", "\[LessEqual]", " ", "10000"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"\[Delta]2", "+", 
       RowBox[{"h2", " ", "d"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DD", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["b", "2"], "-", 
        RowBox[{"4", " ", 
         RowBox[{"f", "[", "x2", "]"}], "d"}]}]]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"b", "-", "DD"}], "]"}], "<", 
        RowBox[{"Abs", "[", 
         RowBox[{"b", "+", "DD"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"EE", "=", 
        RowBox[{"b", "+", "DD"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"EE", "=", 
        RowBox[{"b", "-", "DD"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{
        RowBox[{"f", "[", "x2", "]"}], "/", "EE"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p", "=", 
      RowBox[{"x2", "+", "h"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"pLine", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed", ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p", ",", 
              RowBox[{"f1", "[", "p", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", 
              RowBox[{"f", "[", "p", "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"textP", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{
         SubscriptBox["\"\<x\>\"", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", ">", "0.865474"}], ",", "0.1", ",", 
             RowBox[{
              RowBox[{"f1", "[", "p", "]"}], "+", "0.1"}]}], "]"}]}], "}"}]}],
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"animatePlot", ",", 
        RowBox[{"Show", "[", 
         RowBox[{
         "plot1", ",", "plot2", ",", "lines", ",", "textAB", ",", "pLine", 
          ",", "textP", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "h", "]"}], "<", "0.001"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"x0", "=", "x1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x1", "=", "x2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2", "=", "p"}], ";", "\[IndentingNewLine]", 
     RowBox[{"h1", "=", 
      RowBox[{"x1", "-", "x0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"h2", "=", 
      RowBox[{"x2", "-", "x1"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]1", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", "x1", "]"}], "-", 
         RowBox[{"f", "[", "x0", "]"}]}], ")"}], "/", "h1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]2", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", "x2", "]"}], "-", 
         RowBox[{"f", "[", "x1", "]"}]}], ")"}], "/", "h2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"h2", "+", "h1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "[", "x0", "]"}], "==", 
            RowBox[{
             RowBox[{"c1", " ", 
              SuperscriptBox["x0", "2"]}], "+", 
             RowBox[{"c2", " ", "x0"}], "+", "c3"}]}], ",", 
           RowBox[{
            RowBox[{"f", "[", "x1", "]"}], "==", 
            RowBox[{
             RowBox[{"c1", " ", 
              SuperscriptBox["x1", "2"]}], "+", 
             RowBox[{"c2", " ", "x1"}], "+", "c3"}]}], ",", 
           RowBox[{
            RowBox[{"f", "[", "x2", "]"}], "==", 
            RowBox[{
             RowBox[{"c1", " ", 
              SuperscriptBox["x2", "2"]}], "+", 
             RowBox[{"c2", " ", "x2"}], "+", "c3"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}]}], "]"}], "//", 
       "First"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f1", "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"c1", " ", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"c2", " ", "x"}], "+", "c3"}], "/.", "sol"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plot2", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f1", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"xRange", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"xRange", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lines", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x0", ",", 
              RowBox[{"f", "[", "x0", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x1", ",", 
              RowBox[{"f", "[", "x1", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x2", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x2", ",", 
              RowBox[{"f", "[", "x2", "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"textAB", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           SubscriptBox["\"\<x\>\"", 
            RowBox[{"i", "-", "2"}]], ",", 
           RowBox[{"{", 
            RowBox[{"x0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x0", ">", "0.865474"}], ",", "0.1", ",", 
               RowBox[{
                RowBox[{"f", "[", "x0", "]"}], "+", "0.1"}]}], "]"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           SubscriptBox["\"\<x\>\"", 
            RowBox[{"i", "-", "1"}]], ",", 
           RowBox[{"{", 
            RowBox[{"x1", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x1", ">", "0.865474"}], ",", "0.1", ",", 
               RowBox[{
                RowBox[{"f", "[", "x1", "]"}], "+", "0.1"}]}], "]"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           SubscriptBox["\"\<x\>\"", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x2", ">", "0.865474"}], ",", "0.1", ",", 
               RowBox[{
                RowBox[{"f", "[", "x2", "]"}], "+", "0.1"}]}], "]"}]}], 
            "}"}]}], "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"animatePlot", ",", 
       RowBox[{"Show", "[", 
        RowBox[{"plot1", ",", "plot2", ",", "lines", ",", "textAB", ",", 
         RowBox[{"PlotRange", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"animatePlot", ",", "0.5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.494433435114355*^9, 3.494433606770344*^9}, {
   3.494433642989726*^9, 3.4944339303670273`*^9}, {3.49443458195411*^9, 
   3.494434600021343*^9}, {3.494434657542718*^9, 3.494434868535284*^9}, {
   3.494436261504401*^9, 3.4944362691678467`*^9}, {3.49446001818791*^9, 
   3.4944600451973343`*^9}, {3.4944600865134487`*^9, 3.494460224020863*^9}, {
   3.494460344041741*^9, 3.4944604990262403`*^9}, {3.494460554865986*^9, 
   3.494460555777828*^9}, {3.494460648749832*^9, 3.4944606503659763`*^9}, 
   3.494460686437615*^9, {3.494460723479138*^9, 3.494460723752048*^9}, {
   3.494460775188634*^9, 3.494460776012197*^9}, {3.4944608330589743`*^9, 
   3.494460928449634*^9}, {3.494460987167428*^9, 3.494461069999682*^9}, {
   3.494461100264223*^9, 3.494461107422989*^9}, {3.49446116342793*^9, 
   3.494461273364854*^9}, {3.4944613131174307`*^9, 3.494461327566619*^9}, {
   3.494461386471149*^9, 3.494461438656961*^9}, {3.494461517332305*^9, 
   3.494461602678877*^9}, {3.494461688572041*^9, 3.494461718679454*^9}, {
   3.494461781376196*^9, 3.494461863928935*^9}, 3.4944619161707697`*^9, {
   3.494461975991906*^9, 3.494462030945718*^9}, {3.494462351159844*^9, 
   3.4944623616513157`*^9}, {3.494462727215261*^9, 3.4944628447761803`*^9}, {
   3.494699579809815*^9, 3.494699614637281*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i1$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i1$$ = 1}, 
     "\"max\"" :> {$CellContext`i1$$ = 8}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i1$$], 1, ""}, 1, 8, 1}}, Typeset`size$$ = Automatic,
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i1$645$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            StyleBox[GridBox[{
               {
                TagBox["\<\"\"\>",
                 HoldForm], 
                AnimatorBox[Dynamic[$CellContext`i1$$], {1, 8, 1},
                 AnimationRate->0.5,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 ContinuousAction->True,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ManipulateLabel",
             StripOnInput->False],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
iIw3qrD9SMf+Dx1e740=
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.1, 0}, {0.1, 0.9940041652780257}}], 
                   LineBox[{{0.2, 0}, {0.2, 0.9720665778412416}}], 
                   LineBox[{{0.3, 0}, {0.3, 0.928336489125606}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "0"], {0.1, 1.0940041652780257`}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "1"], {0.2, 1.0720665778412417`}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "2"], {0.3, 1.028336489125606}]}},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.2}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 2->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1Hk0lVsfB3BFOURShnKjTKc0qTQXX4Tm0hWlpMhwQqYbmQmpcDIl0kGu
XHlRilLIecykgZASQsoQ5+EYHhLep73WXnt9/vuu/RsULZ3+tp4rICCQR98/
78Qhx0RDp/Nav2f/HBIhVqtWv2dqIev5yqo/fsvrtmMzjyJS4/jyP86U/nL/
M8cE8Rt0ZqdpD+XuDXdgmkPX4r7Tb9pyah8LZ5st8SBE4dIv2poeoZtqODaw
PmNPUbTPV2mlR1vYoSRx28Ix2oEyI8vNmI4IFt/4ZJj2h6dGNdFjzljsINwx
SNuqZX0w1ewKCx+HhD7aY3MYMCu4jIm5Eh3df/KqdU0SHHeMVSTlfKUte7wo
T9XfA/PZtQtaaD/0uOMUauEFF0X94QbatVUHvxsx/bD7a5tpJe1HVxYbmgkF
QDDVrLWY9pUw/+xbYwEYZfX0PKfNyDVljTQHwkWnIz6Ndl1lZYVqTRAEprI1
ObTvtmgonyoIRrHQPrto2mvmLmwv4oRAkZVg6kubL+29m2Rfh7Vb3l+utAvV
euMV/W9AapeplQ3tw8dLjUIsQnHAcu6NI7Sd7rvXHGPewokPEotkaO/I+8YM
lI2Axpai6fm0BaxW654WikSSrasTNUOi5kpscvhYJKR5hW0faZ9Odjo93ByN
d35z2iJoa6kxb4YaxkDXdleXD22l3NZ85ZoY7Lr/m3WR9s/KA9ImBbfB7Gyd
1Kbtw1OuK+Dcgcq8wyv7p+l6ebTMGEnHgXyzUK2Btt7cqPWD7DhI1rTkFNIW
l5kJXeEfj82OR/eE0U7S/KQfbJGAJRrfd6rQLgkPLzzCTIKkWOtNzd8kivs/
v1mQkQSnuLMv/qJdtH9Ve83aZLSGWh+YnCJxZq6FQOrS+1gb7BL1lLZx8ZTS
CoUU2G0+9Uie9sFtm1iyaqnYqn6mtGmSxP7vzc7udqmYNozqy6C977afZ1Nm
Kv7W5jv40tbj14bGbHiA1YOJIUq0tR7ZZEtsSQPF9ftlNUFCg8nhCyMd3c7+
Ya/HSWxu0p2yCUjHQD2hf5v2xuA+wcqSdPyIbjA+S3tD1zbpYL2HYKk2uw2O
kVidVL9d4GAGvO7t+d882stlhH0nTmRixOpFmPQIiXnzXYX77B6Db/qvfQ6P
RO8Bf4mR9MdQOFqnfpH2a3a47HT3Y8hw404o0q4KbYi5oZ6De6yM4ohBEmGL
eamcjByUOjYusB4gIaWkXF6e+AS/TmnoDveRYOqwhaRDciH2tbCd3U33/7cY
RsKDXMgOX5fZTJtxLUFsRVkuVNVTHzR9I9FfnS6lJpCHEiO/Ujnajw1LVTS9
8vA2oWaK00n323lKz9rxGeRZb5ZfbSdxwN/i2jOTfJQ23vtc0Uz/T0SJQcrl
fGyLtfUwob08WZHBjs6H+aSm3Y+P9D4o7gy1epePB1FN+kK078xYRC4xeAHn
u3satzeS6Pa1vOey9SWucI1E/epIBPhceLJeqhCFi/W4wdUk7MLLXJdtLsTp
71Vqs1UkTnCUt8wzLITGxZw2D9qrir49bw0rxKZ13ivtKkm8m7pQFCZYhIib
N0X0yuk83lZVffwi6AzJM5u4JPI9rdvS6osRlCrraPecxH9a9s1y/GJcdshb
Sjyj8wm61Ecs5kKvTqZTirY726fC04iLmjepNYW5JLalxGQfaeJC5K0SOZND
92d3R7GXA4Ev9m1bT2eSaFkgEaHkXIIee0rQMpnE3zxJsbMBJRCs25uRkETX
t07qZlxkCfjDUuc/JJIoiJULEntSAnS8EgCHRMIK5pXx4RIU8N0Exe/S86uh
ee71P6UQ3NT1wjuaxOfT9uquV8qwSUlje0owidCufQ5xIWWwKlv5+HUQiV12
KhlFsWWYiX9xeCSQBMezTUk4rwyOrhmUzlV6fuOPyXCGymCwoUuwyZdET5PG
dMXFchT67cupd6f3qeHv18vMKiBmz1+vzCIhuY9tU6JdBbfrQXbS++n5ySjC
2uNVyHWSlSENSHgsGFgaa1GFlR4TGVX6JDreH6xlBVYhslfiptteEjmnGBsX
lVehueDOsnItEoZ2QZPm+6oR3aWwbt1WEpFsz/DfR2qwxdbilKoiiUWN1k+3
n6nFTtnFX9PGeNAe1Ok/YV+L64bxmpqjPDjPV1By9a6FnoSlewOfh/odH6Oy
7tVib6m+22+Sh+hEAxfF1lpEjIwlavfzIG27auOCs2/QW479Ue08yP3qzW43
f4ssjpT98UoelFc6ZFyzfA+zyxr6O6J5CG9XTGG7vEey3rpn9yN5GOc0x8cG
vEeM3yJJRgQP1cv23khLeo9zBRfDGsJ4cFgiZ1vR8h59LvMCz17j4YygVXSg
Wh00Pslu0fTgIW1c0rA0pQ4F7umxamd52NF2qVYnuh7Xzc6kpinzUPIr4HDj
vQYcmmeU3HVnECxudXVxYBNUjL/U35kZwN0L6XLS55sx4Xl4MuDEANaf6hyf
sf6MOYKyXieDfqJ95Ng77QNfkPiY6Vif3g/+12UbZYzbsP5ARXJPYh8iM71s
T578CvGcPZ6rvXvBlGAc8bjXASFNhW4twx48dw7IvJXcCb2so7asge9oVI0R
Ph7dBecnTXEmV7uhEtSw+uzdb9BMSl/2obELOw2/bkm+142rlq2ZmxZ0os35
mhY7/DtC5DdPKPq04+lOU/GKqB8wOqStQhq0QMak6vPDaz248b+gCrWFH4Eu
gajSy71YP9CmIvBvPe7KsMSZHn24/OJ1SatgDQKTLl7fatcPw3NHHlWmvELi
u/jKW84/ISDKFVNgxcPXMWZI3nUAN7qNdVu9nnJ/Wqxeamo5iB2h3MlNlhXc
sOl+oXYbHvQU/lm062E9t2BgH7nwNInbsZ4X/g35xP2ouqNrl8oQugzF9eM5
X7kstQvqMWlDWNM7laTe8o1bYnLGW0dhGKop8arnPvRwNU71Z0ilDIMR21Dl
eHKA6xBk0Kz5Fx+Gc3eGRFoOcW/YMH7NieHDLEd7YX06n/tK3mK2X2oEGruW
rfHcPcZ9ORMiuObWCHpNp2WWcinuu9y9/WzJUWRd/IfIjvvFrVhpUxkePQo7
f//h5UHT3OB845RO0THkcx81vFsnQJgptZqfYY9Bj6P5fLRyDjH1XP2vtcLj
cP15a56zsSDhI9j3JtZvHC173hvx+4UIGZWdFqoCFOS/Ffk1584nrjiajIp6
UjjeGFVn5sgglm+zqmZ6U3ipsvzhDncGQUy7cHR9KWSLs4uk/RiEKJut53WV
wqeQAE4Dm0EkZZbf7rtJwUsRu82zGURl7+at1QkUJhRSGY8HGITUBQn3a0UU
ThzSuw4HEeLlGvmDKcUUfjbLqu29LEKY89covCIobHpDiO73ESEeXjWoHC2n
0FUyxDYOFyF23/eVsXpL4fJL0zv+WSKEZdvP57rtFOTsP5ZJDIoQwmmToeYd
FNIvzV5aNSZCZDkIn/PqorBnjZup9rQIMT6lJPz0BwWzBw9G3cRFiVC50ycV
SQr/nX2gNbRelFDvsl2rOUxBjF82JrlNlGjMcJs9NUKB7P7J26IlSijsjEqP
pCj45j9N9zsqSpQJJHtnTVLI9w+wTTMRJVjVWceqpyiEXsm7+NZclBCLLFDu
nqbzLbF5NG4jSjw5WU3NzlKIrMzaqugkSvwfGEHQIw==
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
iIw3qrD9SMf+Dx1e740=
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.1, 0}, {0.1, 0.9940041652780257}}], 
                   LineBox[{{0.2, 0}, {0.2, 0.9720665778412416}}], 
                   LineBox[{{0.3, 0}, {0.3, 0.928336489125606}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "0"], {0.1, 1.0940041652780257`}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "1"], {0.2, 1.0720665778412417`}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "2"], {0.3, 1.028336489125606}]}, 
                  {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
                   LineBox[{{1.0057918892104782`, 1.7763568394002505`*^-15}, {
                    1.0057918892104782`, -0.4820569359287925}}]}, InsetBox[
                   
                   SubscriptBox["\<\"x\"\>", 
                    "3"], {1.0057918892104782`, 0.1}]},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.2}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 3->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
J2iM/wGUXOXO
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.2, 0}, {0.2, 0.9720665778412416}}], 
                   LineBox[{{0.3, 0}, {0.3, 0.928336489125606}}], 
                   LineBox[{{1.0057918892104782`, 0}, {
                    1.0057918892104782`, -0.4820569359287925}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "1"], {0.2, 1.0720665778412417`}], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {0.3, 1.028336489125606}],
                    InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {1.0057918892104782`, 0.1}]}},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.2}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 4->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
J2iM/wGUXOXO
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.2, 0}, {0.2, 0.9720665778412416}}], 
                   LineBox[{{0.3, 0}, {0.3, 0.928336489125606}}], 
                   LineBox[{{1.0057918892104782`, 0}, {
                    1.0057918892104782`, -0.4820569359287925}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "1"], {0.2, 1.0720665778412417`}], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {0.3, 1.028336489125606}],
                    InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {1.0057918892104782`, 0.1}]}, 
                  {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
                   LineBox[{{0.848280894984535, -2.220446049250313*^-16}, {
                    0.848280894984535, 0.05086732906048996}}]}, InsetBox[
                   
                   SubscriptBox["\<\"x\"\>", 
                    "4"], {0.848280894984535, 0.09999999999999978}]},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.2}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 5->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
RY1iu0HRu1SJUeZ/K0/PDEqOIc8y20LSYZz5ftpfcH3oGO65jmqJvZ1g1rzV
GwyRGEdNnM2aTTq/mSVrzn0KjhzHjWsM3Y11f5i3ck1TPov8RMyuGs2TB6eZ
lrIdjBMhP3Hp2fgtqQAB1p8ctRXKtAkstVS1/NU+i+UtOFAVfW0CKy2DGxZs
FGRJyW87/Y8AHwnqPdPyr4RYlx3p4yKefBhwLIKlZIRZMlvOlilc5UNx0YHI
AFlhFmvK5eFuHz58hPkH/igKs0RCQvS9/PiIm3ejrXezMCvxefG9gUA+bDzP
ns07LMz61L9xc1kcH3YzFsp3bwqzJK3FPG5/4GPu44X+b7nCrPfrV+5PKeCj
zcRdcOeoMIsxun7Vfyw+5N/d31TyS5j11M/w03gxH6sfiGW1zqGxdiT7SJ2t
5iOjuFJadA2NdaaTm7O7iw+lIveHYSY0Fu3x7yBGDx8eGfdN5U7QWC/saae8
evnYou9elHuaxpr4I0vL+kbq3bPO7XWksYKWW5itHeIjNGH+wl2BNJZar62y
9ggf0Wvm27SF0VgNGe4z5mN8LDYrdXKLobFWbYtID+fz4dblnPzsEY31USDp
6ovffFionfpk+IzGsit7cbjsDx+5mvOS+17TWPPD8+S+TPFxi+uo4pdLY70x
K+PPzPBRRw93XF1AY/0PcP+/3g==
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.3, 0}, {0.3, 0.928336489125606}}], 
                   LineBox[{{1.0057918892104782`, 0}, {
                    1.0057918892104782`, -0.4820569359287925}}], 
                   LineBox[{{0.848280894984535, 0}, {0.848280894984535, 
                    0.05086732906048996}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {0.3, 1.028336489125606}],
                    InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {1.0057918892104782`, 0.1}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "4"], {0.848280894984535, 0.15086732906048997`}]}},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.2}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 6->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
RY1iu0HRu1SJUeZ/K0/PDEqOIc8y20LSYZz5ftpfcH3oGO65jmqJvZ1g1rzV
GwyRGEdNnM2aTTq/mSVrzn0KjhzHjWsM3Y11f5i3ck1TPov8RMyuGs2TB6eZ
lrIdjBMhP3Hp2fgtqQAB1p8ctRXKtAkstVS1/NU+i+UtOFAVfW0CKy2DGxZs
FGRJyW87/Y8AHwnqPdPyr4RYlx3p4yKefBhwLIKlZIRZMlvOlilc5UNx0YHI
AFlhFmvK5eFuHz58hPkH/igKs0RCQvS9/PiIm3ejrXezMCvxefG9gUA+bDzP
ns07LMz61L9xc1kcH3YzFsp3bwqzJK3FPG5/4GPu44X+b7nCrPfrV+5PKeCj
zcRdcOeoMIsxun7Vfyw+5N/d31TyS5j11M/w03gxH6sfiGW1zqGxdiT7SJ2t
5iOjuFJadA2NdaaTm7O7iw+lIveHYSY0Fu3x7yBGDx8eGfdN5U7QWC/saae8
evnYou9elHuaxpr4I0vL+kbq3bPO7XWksYKWW5itHeIjNGH+wl2BNJZar62y
9ggf0Wvm27SF0VgNGe4z5mN8LDYrdXKLobFWbYtID+fz4dblnPzsEY31USDp
6ovffFionfpk+IzGsit7cbjsDx+5mvOS+17TWPPD8+S+TPFxi+uo4pdLY70x
K+PPzPBRRw93XF1AY/0PcP+/3g==
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.3, 0}, {0.3, 0.928336489125606}}], 
                   LineBox[{{1.0057918892104782`, 0}, {
                    1.0057918892104782`, -0.4820569359287925}}], 
                   LineBox[{{0.848280894984535, 0}, {0.848280894984535, 
                    0.05086732906048996}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {0.3, 1.028336489125606}],
                    InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {1.0057918892104782`, 0.1}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "4"], {0.848280894984535, 0.15086732906048997`}]}, 
                  {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
                   LineBox[{{0.865080232316928, -2.220446049250313*^-16}, {
                    0.865080232316928, 0.0011843119814065606`}}]}, InsetBox[
                   
                   SubscriptBox["\<\"x\"\>", 
                    "5"], {0.865080232316928, 0.09999999999999978}]},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.2}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 7->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
1LZMODUlhMOvIYUE2izm/wGAQ7Dj
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{1.0057918892104782`, 0}, {
                    1.0057918892104782`, -0.4820569359287925}}], 
                   LineBox[{{0.848280894984535, 0}, {0.848280894984535, 
                    0.05086732906048996}}], 
                   LineBox[{{0.865080232316928, 0}, {0.865080232316928, 
                    0.0011843119814065606`}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {1.0057918892104782`, 0.1}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "4"], {0.848280894984535, 0.15086732906048997`}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "5"], {0.865080232316928, 0.10118431198140657`}]}},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.2}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 8->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1Hk0lVsfB3BFOURShnKjTKc0qTQXX4Tm0hWlpMhwQqYbmQmpcDIl0kGu
XHlRilLIecykgZASQsoQ5+EYHhLep73WXnt9/vuu/RsULZ3+tp4rICCQR98/
78Qhx0RDp/Nav2f/HBIhVqtWv2dqIev5yqo/fsvrtmMzjyJS4/jyP86U/nL/
M8cE8Rt0ZqdpD+XuDXdgmkPX4r7Tb9pyah8LZ5st8SBE4dIv2poeoZtqODaw
PmNPUbTPV2mlR1vYoSRx28Ix2oEyI8vNmI4IFt/4ZJj2h6dGNdFjzljsINwx
SNuqZX0w1ewKCx+HhD7aY3MYMCu4jIm5Eh3df/KqdU0SHHeMVSTlfKUte7wo
T9XfA/PZtQtaaD/0uOMUauEFF0X94QbatVUHvxsx/bD7a5tpJe1HVxYbmgkF
QDDVrLWY9pUw/+xbYwEYZfX0PKfNyDVljTQHwkWnIz6Ndl1lZYVqTRAEprI1
ObTvtmgonyoIRrHQPrto2mvmLmwv4oRAkZVg6kubL+29m2Rfh7Vb3l+utAvV
euMV/W9AapeplQ3tw8dLjUIsQnHAcu6NI7Sd7rvXHGPewokPEotkaO/I+8YM
lI2Axpai6fm0BaxW654WikSSrasTNUOi5kpscvhYJKR5hW0faZ9Odjo93ByN
d35z2iJoa6kxb4YaxkDXdleXD22l3NZ85ZoY7Lr/m3WR9s/KA9ImBbfB7Gyd
1Kbtw1OuK+Dcgcq8wyv7p+l6ebTMGEnHgXyzUK2Btt7cqPWD7DhI1rTkFNIW
l5kJXeEfj82OR/eE0U7S/KQfbJGAJRrfd6rQLgkPLzzCTIKkWOtNzd8kivs/
v1mQkQSnuLMv/qJdtH9Ve83aZLSGWh+YnCJxZq6FQOrS+1gb7BL1lLZx8ZTS
CoUU2G0+9Uie9sFtm1iyaqnYqn6mtGmSxP7vzc7udqmYNozqy6C977afZ1Nm
Kv7W5jv40tbj14bGbHiA1YOJIUq0tR7ZZEtsSQPF9ftlNUFCg8nhCyMd3c7+
Ya/HSWxu0p2yCUjHQD2hf5v2xuA+wcqSdPyIbjA+S3tD1zbpYL2HYKk2uw2O
kVidVL9d4GAGvO7t+d882stlhH0nTmRixOpFmPQIiXnzXYX77B6Db/qvfQ6P
RO8Bf4mR9MdQOFqnfpH2a3a47HT3Y8hw404o0q4KbYi5oZ6De6yM4ohBEmGL
eamcjByUOjYusB4gIaWkXF6e+AS/TmnoDveRYOqwhaRDciH2tbCd3U33/7cY
RsKDXMgOX5fZTJtxLUFsRVkuVNVTHzR9I9FfnS6lJpCHEiO/Ujnajw1LVTS9
8vA2oWaK00n323lKz9rxGeRZb5ZfbSdxwN/i2jOTfJQ23vtc0Uz/T0SJQcrl
fGyLtfUwob08WZHBjs6H+aSm3Y+P9D4o7gy1epePB1FN+kK078xYRC4xeAHn
u3satzeS6Pa1vOey9SWucI1E/epIBPhceLJeqhCFi/W4wdUk7MLLXJdtLsTp
71Vqs1UkTnCUt8wzLITGxZw2D9qrir49bw0rxKZ13ivtKkm8m7pQFCZYhIib
N0X0yuk83lZVffwi6AzJM5u4JPI9rdvS6osRlCrraPecxH9a9s1y/GJcdshb
Sjyj8wm61Ecs5kKvTqZTirY726fC04iLmjepNYW5JLalxGQfaeJC5K0SOZND
92d3R7GXA4Ev9m1bT2eSaFkgEaHkXIIee0rQMpnE3zxJsbMBJRCs25uRkETX
t07qZlxkCfjDUuc/JJIoiJULEntSAnS8EgCHRMIK5pXx4RIU8N0Exe/S86uh
ee71P6UQ3NT1wjuaxOfT9uquV8qwSUlje0owidCufQ5xIWWwKlv5+HUQiV12
KhlFsWWYiX9xeCSQBMezTUk4rwyOrhmUzlV6fuOPyXCGymCwoUuwyZdET5PG
dMXFchT67cupd6f3qeHv18vMKiBmz1+vzCIhuY9tU6JdBbfrQXbS++n5ySjC
2uNVyHWSlSENSHgsGFgaa1GFlR4TGVX6JDreH6xlBVYhslfiptteEjmnGBsX
lVehueDOsnItEoZ2QZPm+6oR3aWwbt1WEpFsz/DfR2qwxdbilKoiiUWN1k+3
n6nFTtnFX9PGeNAe1Ok/YV+L64bxmpqjPDjPV1By9a6FnoSlewOfh/odH6Oy
7tVib6m+22+Sh+hEAxfF1lpEjIwlavfzIG27auOCs2/QW479Ue08yP3qzW43
f4ssjpT98UoelFc6ZFyzfA+zyxr6O6J5CG9XTGG7vEey3rpn9yN5GOc0x8cG
vEeM3yJJRgQP1cv23khLeo9zBRfDGsJ4cFgiZ1vR8h59LvMCz17j4YygVXSg
Wh00Pslu0fTgIW1c0rA0pQ4F7umxamd52NF2qVYnuh7Xzc6kpinzUPIr4HDj
vQYcmmeU3HVnECxudXVxYBNUjL/U35kZwN0L6XLS55sx4Xl4MuDEANaf6hyf
sf6MOYKyXieDfqJ95Ng77QNfkPiY6Vif3g/+12UbZYzbsP5ARXJPYh8iM71s
T578CvGcPZ6rvXvBlGAc8bjXASFNhW4twx48dw7IvJXcCb2so7asge9oVI0R
Ph7dBecnTXEmV7uhEtSw+uzdb9BMSl/2obELOw2/bkm+142rlq2ZmxZ0os35
mhY7/DtC5DdPKPq04+lOU/GKqB8wOqStQhq0QMak6vPDaz248b+gCrWFH4Eu
gajSy71YP9CmIvBvPe7KsMSZHn24/OJ1SatgDQKTLl7fatcPw3NHHlWmvELi
u/jKW84/ISDKFVNgxcPXMWZI3nUAN7qNdVu9nnJ/Wqxeamo5iB2h3MlNlhXc
sOl+oXYbHvQU/lm062E9t2BgH7nwNInbsZ4X/g35xP2ouqNrl8oQugzF9eM5
X7kstQvqMWlDWNM7laTe8o1bYnLGW0dhGKop8arnPvRwNU71Z0ilDIMR21Dl
eHKA6xBk0Kz5Fx+Gc3eGRFoOcW/YMH7NieHDLEd7YX06n/tK3mK2X2oEGruW
rfHcPcZ9ORMiuObWCHpNp2WWcinuu9y9/WzJUWRd/IfIjvvFrVhpUxkePQo7
f//h5UHT3OB845RO0THkcx81vFsnQJgptZqfYY9Bj6P5fLRyDjH1XP2vtcLj
cP15a56zsSDhI9j3JtZvHC173hvx+4UIGZWdFqoCFOS/Ffk1584nrjiajIp6
UjjeGFVn5sgglm+zqmZ6U3ipsvzhDncGQUy7cHR9KWSLs4uk/RiEKJut53WV
wqeQAE4Dm0EkZZbf7rtJwUsRu82zGURl7+at1QkUJhRSGY8HGITUBQn3a0UU
ThzSuw4HEeLlGvmDKcUUfjbLqu29LEKY89covCIobHpDiO73ESEeXjWoHC2n
0FUyxDYOFyF23/eVsXpL4fJL0zv+WSKEZdvP57rtFOTsP5ZJDIoQwmmToeYd
FNIvzV5aNSZCZDkIn/PqorBnjZup9rQIMT6lJPz0BwWzBw9G3cRFiVC50ycV
SQr/nX2gNbRelFDvsl2rOUxBjF82JrlNlGjMcJs9NUKB7P7J26IlSijsjEqP
pCj45j9N9zsqSpQJJHtnTVLI9w+wTTMRJVjVWceqpyiEXsm7+NZclBCLLFDu
nqbzLbF5NG4jSjw5WU3NzlKIrMzaqugkSvwfGEHQIw==
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
1LZMODUlhMOvIYUE2izm/wGAQ7Dj
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{1.0057918892104782`, 0}, {
                    1.0057918892104782`, -0.4820569359287925}}], 
                   LineBox[{{0.848280894984535, 0}, {0.848280894984535, 
                    0.05086732906048996}}], 
                   LineBox[{{0.865080232316928, 0}, {0.865080232316928, 
                    0.0011843119814065606`}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {1.0057918892104782`, 0.1}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "4"], {0.848280894984535, 0.15086732906048997`}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "5"], {0.865080232316928, 0.10118431198140657`}]}, 
                  {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
                   LineBox[{{0.8654737585977333, 0.}, {0.8654737585977333, 
                    8.258552913753547*^-7}}]}, InsetBox[
                   SubscriptBox["\<\"x\"\>", "6"], {0.8654737585977333, 0.1}]},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.2}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}]}, Dynamic[$CellContext`i1$$],
                Alignment->Automatic,
                ImageSize->All],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        CurrentValue["SelectionOver"], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i1$$, \
$CellContext`i1$645$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 8, 1}, 8, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{309., {105.59375, 110.90625}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.494462227909573*^9, 3.494462253423603*^9}, {
   3.494462329859977*^9, 3.494462382502763*^9}, 3.4944625156675577`*^9, {
   3.494462601786482*^9, 3.4944626044820127`*^9}, {3.4944627681601763`*^9, 
   3.494462776903187*^9}, {3.494462824638694*^9, 3.494462865362381*^9}, 
   3.494462997406938*^9, {3.494463030472082*^9, 3.4944630317062607`*^9}, {
   3.49468999736903*^9, 3.494690049982008*^9}, 3.4946900893846893`*^9, 
   3.4946901242882833`*^9, {3.494699519152841*^9, 3.494699542049594*^9}, 
   3.494699616487143*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "-", 
    SuperscriptBox["x", "3"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xRange", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.5"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x2", "=", "1.4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"xRange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"xRange", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x0", "]"}], "==", 
         RowBox[{
          RowBox[{"c1", " ", 
           SuperscriptBox["x0", "2"]}], "+", 
          RowBox[{"c2", " ", "x0"}], "+", "c3"}]}], ",", 
        RowBox[{
         RowBox[{"f", "[", "x1", "]"}], "==", 
         RowBox[{
          RowBox[{"c1", " ", 
           SuperscriptBox["x1", "2"]}], "+", 
          RowBox[{"c2", " ", "x1"}], "+", "c3"}]}], ",", 
        RowBox[{
         RowBox[{"f", "[", "x2", "]"}], "==", 
         RowBox[{
          RowBox[{"c1", " ", 
           SuperscriptBox["x2", "2"]}], "+", 
          RowBox[{"c2", " ", "x2"}], "+", "c3"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}]}], "]"}], "//", 
    "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"c1", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"c2", " ", "x"}], "+", "c3"}], "/.", "sol"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f1", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"xRange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"xRange", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lines", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x0", ",", 
            RowBox[{"f", "[", "x0", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"f", "[", "x1", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", 
            RowBox[{"f", "[", "x2", "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"textAB", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         SubscriptBox["\"\<x\>\"", "0"], ",", 
         RowBox[{"{", 
          RowBox[{"x0", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"x0", ">", "0.865474"}], ",", "0.1", ",", 
             RowBox[{
              RowBox[{"f", "[", "x0", "]"}], "+", "0.1"}]}], "]"}]}], "}"}]}],
         "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         SubscriptBox["\"\<x\>\"", "1"], ",", 
         RowBox[{"{", 
          RowBox[{"x1", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"x1", ">", "0.865474"}], ",", "0.1", ",", 
             RowBox[{
              RowBox[{"f", "[", "x1", "]"}], "+", "0.1"}]}], "]"}]}], "}"}]}],
         "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         SubscriptBox["\"\<x\>\"", "2"], ",", 
         RowBox[{"{", 
          RowBox[{"x2", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"x2", ">", "0.865474"}], ",", "0.1", ",", 
             RowBox[{
              RowBox[{"f", "[", "x2", "]"}], "+", "0.1"}]}], "]"}]}], "}"}]}],
         "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"animatePlot", "=", 
    RowBox[{"{", 
     RowBox[{"Show", "[", 
      RowBox[{"plot1", ",", "plot2", ",", "lines", ",", "textAB", ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", 
   RowBox[{"x1", "-", "x0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", 
   RowBox[{"x2", "-", "x1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", "x1", "]"}], "-", 
      RowBox[{"f", "[", "x0", "]"}]}], ")"}], "/", "h1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", "x2", "]"}], "-", 
      RowBox[{"f", "[", "x1", "]"}]}], ")"}], "/", "h2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"h2", "+", "h1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", "\[LessEqual]", " ", "10000"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"\[Delta]2", "+", 
       RowBox[{"h2", " ", "d"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DD", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["b", "2"], "-", 
        RowBox[{"4", " ", 
         RowBox[{"f", "[", "x2", "]"}], "d"}]}]]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"b", "-", "DD"}], "]"}], "<", 
        RowBox[{"Abs", "[", 
         RowBox[{"b", "+", "DD"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"EE", "=", 
        RowBox[{"b", "+", "DD"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"EE", "=", 
        RowBox[{"b", "-", "DD"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{
        RowBox[{"f", "[", "x2", "]"}], "/", "EE"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p", "=", 
      RowBox[{"x2", "+", "h"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"pLine", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed", ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p", ",", 
              RowBox[{"f1", "[", "p", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", 
              RowBox[{"f", "[", "p", "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"textP", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{
         SubscriptBox["\"\<x\>\"", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", ">", "0.865474"}], ",", "0.1", ",", 
             RowBox[{
              RowBox[{"f1", "[", "p", "]"}], "+", "0.1"}]}], "]"}]}], "}"}]}],
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"animatePlot", ",", 
        RowBox[{"Show", "[", 
         RowBox[{
         "plot1", ",", "plot2", ",", "lines", ",", "textAB", ",", "pLine", 
          ",", "textP", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]}], 
       "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "h", "]"}], "<", "0.001"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"x0", "=", "x1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x1", "=", "x2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2", "=", "p"}], ";", "\[IndentingNewLine]", 
     RowBox[{"h1", "=", 
      RowBox[{"x1", "-", "x0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"h2", "=", 
      RowBox[{"x2", "-", "x1"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]1", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", "x1", "]"}], "-", 
         RowBox[{"f", "[", "x0", "]"}]}], ")"}], "/", "h1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]2", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", "x2", "]"}], "-", 
         RowBox[{"f", "[", "x1", "]"}]}], ")"}], "/", "h2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"h2", "+", "h1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "[", "x0", "]"}], "==", 
            RowBox[{
             RowBox[{"c1", " ", 
              SuperscriptBox["x0", "2"]}], "+", 
             RowBox[{"c2", " ", "x0"}], "+", "c3"}]}], ",", 
           RowBox[{
            RowBox[{"f", "[", "x1", "]"}], "==", 
            RowBox[{
             RowBox[{"c1", " ", 
              SuperscriptBox["x1", "2"]}], "+", 
             RowBox[{"c2", " ", "x1"}], "+", "c3"}]}], ",", 
           RowBox[{
            RowBox[{"f", "[", "x2", "]"}], "==", 
            RowBox[{
             RowBox[{"c1", " ", 
              SuperscriptBox["x2", "2"]}], "+", 
             RowBox[{"c2", " ", "x2"}], "+", "c3"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}]}], "]"}], "//", 
       "First"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f1", "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"c1", " ", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"c2", " ", "x"}], "+", "c3"}], "/.", "sol"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plot2", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f1", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"xRange", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"xRange", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lines", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x0", ",", 
              RowBox[{"f", "[", "x0", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x1", ",", 
              RowBox[{"f", "[", "x1", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x2", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x2", ",", 
              RowBox[{"f", "[", "x2", "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"textAB", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           SubscriptBox["\"\<x\>\"", 
            RowBox[{"i", "-", "2"}]], ",", 
           RowBox[{"{", 
            RowBox[{"x0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x0", ">", "0.865474"}], ",", "0.1", ",", 
               RowBox[{
                RowBox[{"f", "[", "x0", "]"}], "+", "0.1"}]}], "]"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           SubscriptBox["\"\<x\>\"", 
            RowBox[{"i", "-", "1"}]], ",", 
           RowBox[{"{", 
            RowBox[{"x1", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x1", ">", "0.865474"}], ",", "0.1", ",", 
               RowBox[{
                RowBox[{"f", "[", "x1", "]"}], "+", "0.1"}]}], "]"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           SubscriptBox["\"\<x\>\"", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x2", ">", "0.865474"}], ",", "0.1", ",", 
               RowBox[{
                RowBox[{"f", "[", "x2", "]"}], "+", "0.1"}]}], "]"}]}], 
            "}"}]}], "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"animatePlot", ",", 
       RowBox[{"Show", "[", 
        RowBox[{"plot1", ",", "plot2", ",", "lines", ",", "textAB", ",", 
         RowBox[{"PlotRange", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"animatePlot", ",", "0.5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.494433435114355*^9, 3.494433606770344*^9}, {
   3.494433642989726*^9, 3.4944339303670273`*^9}, {3.49443458195411*^9, 
   3.494434600021343*^9}, {3.494434657542718*^9, 3.494434868535284*^9}, {
   3.494436261504401*^9, 3.4944362691678467`*^9}, {3.49446001818791*^9, 
   3.4944600451973343`*^9}, {3.4944600865134487`*^9, 3.494460224020863*^9}, {
   3.494460344041741*^9, 3.4944604990262403`*^9}, {3.494460554865986*^9, 
   3.494460555777828*^9}, {3.494460648749832*^9, 3.4944606503659763`*^9}, 
   3.494460686437615*^9, {3.494460723479138*^9, 3.494460723752048*^9}, {
   3.494460775188634*^9, 3.494460776012197*^9}, {3.4944608330589743`*^9, 
   3.494460928449634*^9}, {3.494460987167428*^9, 3.494461069999682*^9}, {
   3.494461100264223*^9, 3.494461107422989*^9}, {3.49446116342793*^9, 
   3.494461273364854*^9}, {3.4944613131174307`*^9, 3.494461327566619*^9}, {
   3.494461386471149*^9, 3.494461438656961*^9}, {3.494461517332305*^9, 
   3.494461602678877*^9}, {3.494461688572041*^9, 3.494461718679454*^9}, {
   3.494461781376196*^9, 3.494461863928935*^9}, 3.4944619161707697`*^9, {
   3.494461975991906*^9, 3.494462030945718*^9}, {3.494462351159844*^9, 
   3.4944623616513157`*^9}, {3.4944625069481363`*^9, 
   3.4944625416190042`*^9}, {3.4944628731718407`*^9, 3.494462884203636*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i11$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i11$$ = 1}, 
     "\"max\"" :> {$CellContext`i11$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i11$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i11$2084$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            StyleBox[GridBox[{
               {
                TagBox["\<\"\"\>",
                 HoldForm], 
                AnimatorBox[Dynamic[$CellContext`i11$$], {1, 6, 1},
                 AnimationRate->0.5,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 ContinuousAction->True,
                 DisplayAllSteps->True,
                 PausedTime->17.82043743133545]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ManipulateLabel",
             StripOnInput->False],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
VzgxIYT/3eacaopJ/Q9f3K1N
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.1, 0}, {0.1, 0.9940041652780257}}], 
                   LineBox[{{0.8, 0}, {0.8, 0.18470670934716538`}}], 
                   LineBox[{{1.4, 0}, {1.4, -2.574032857099758}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "0"], {0.1, 1.0940041652780257`}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "1"], {0.8, 0.28470670934716535`}], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {1.4, 0.1}]}},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.5}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 2->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
VzgxIYT/3eacaopJ/Q9f3K1N
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.1, 0}, {0.1, 0.9940041652780257}}], 
                   LineBox[{{0.8, 0}, {0.8, 0.18470670934716538`}}], 
                   LineBox[{{1.4, 0}, {1.4, -2.574032857099758}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "0"], {0.1, 1.0940041652780257`}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "1"], {0.8, 0.28470670934716535`}], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {1.4, 0.1}]}, 
                  {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
                   LineBox[{{0.8583784782317189, 4.440892098500626*^-16}, {
                    0.8583784782317189, 0.02120052118500204}}]}, InsetBox[
                   
                   SubscriptBox["\<\"x\"\>", 
                    "3"], {0.8583784782317189, 0.10000000000000045`}]},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.5}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 3->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
NR8ot6b6xbtODIEjV08PmWmmvB20+CHr+AP3b9nsfi/JpLStMuBuVR+GJ2v+
wQZ1DsVzjbtOUu4wkrlPHjMt+ZRq+yMXTZb/xHBITO4n+17KxkP9BfKZP8Fx
b1xs+nOQ4nPVnGGkPILjfTc3ckuHKVEnpCZEk0agbzK72FZslPJO5dhMv/wo
Bv19VGgpvyjl09fF1saNIrroaNHr5b8pja9M+2PlxmBc+Vb06OgE5YPqiY8x
iWPQHWl8OrttinKt1C6zR+YXMo8I7j3fL0J1WtnhfCT2F/a7uXKedYtSJ0t0
lNdJjoMaWjUYf0yMGirW13AnbBzlNfZtN/4Tpy5RNzy2SkQI1cSrjc8fSlCD
fO3HZC4IIROu+nh4hxR12ebjdRoXhSgaE005Yi5FpU75p+68JERG1mjQp31S
VJnY2F0hV4RIeyL5O9NJippWWJvcd1OIMq8RKbcQKerH3g2b6lKECCtsOS1b
IkWVd59/PrJSiF06VaYK66Wp5WtV9mRWCTHUmFeasUma6jyydvk7qhAj+elL
1xpJUx9fMf84ViuEuETNQ1hJU7dlXFpy/KsQlgGfXwd6SVPdOgdKdnYJ4TSH
t0Y2X5oqmfsn2pkjRJwxzTn3mTS1yEfSJYQrxJLn9ZeNSqSp45MrJYsJIXQN
fkX6fZCmRis5Oqz4IUTMhEx2D0+aqsM9uc7oJ1nvRLBB+IA0lV4QOHNoVIiG
jcLyf0alqcsNE/LjhUL4HFC/cmyWDPW9SPrFoj9C1Gz59lFMRobqWVe0v25S
CD/7xN95cjLUufFv1fhTpJ8dW7JXUYb60qFOODMjRBNMVIdVZaj/A/K4434=

                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.8, 0}, {0.8, 0.18470670934716538`}}], 
                   LineBox[{{1.4, 0}, {1.4, -2.574032857099758}}], 
                   LineBox[{{0.8583784782317189, 0}, {0.8583784782317189, 
                    0.02120052118500204}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "1"], {0.8, 0.28470670934716535`}], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {1.4, 0.1}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {0.8583784782317189, 0.12120052118500205`}]}},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.5}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 4->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
NR8ot6b6xbtODIEjV08PmWmmvB20+CHr+AP3b9nsfi/JpLStMuBuVR+GJ2v+
wQZ1DsVzjbtOUu4wkrlPHjMt+ZRq+yMXTZb/xHBITO4n+17KxkP9BfKZP8Fx
b1xs+nOQ4nPVnGGkPILjfTc3ckuHKVEnpCZEk0agbzK72FZslPJO5dhMv/wo
Bv19VGgpvyjl09fF1saNIrroaNHr5b8pja9M+2PlxmBc+Vb06OgE5YPqiY8x
iWPQHWl8OrttinKt1C6zR+YXMo8I7j3fL0J1WtnhfCT2F/a7uXKedYtSJ0t0
lNdJjoMaWjUYf0yMGirW13AnbBzlNfZtN/4Tpy5RNzy2SkQI1cSrjc8fSlCD
fO3HZC4IIROu+nh4hxR12ebjdRoXhSgaE005Yi5FpU75p+68JERG1mjQp31S
VJnY2F0hV4RIeyL5O9NJippWWJvcd1OIMq8RKbcQKerH3g2b6lKECCtsOS1b
IkWVd59/PrJSiF06VaYK66Wp5WtV9mRWCTHUmFeasUma6jyydvk7qhAj+elL
1xpJUx9fMf84ViuEuETNQ1hJU7dlXFpy/KsQlgGfXwd6SVPdOgdKdnYJ4TSH
t0Y2X5oqmfsn2pkjRJwxzTn3mTS1yEfSJYQrxJLn9ZeNSqSp45MrJYsJIXQN
fkX6fZCmRis5Oqz4IUTMhEx2D0+aqsM9uc7oJ1nvRLBB+IA0lV4QOHNoVIiG
jcLyf0alqcsNE/LjhUL4HFC/cmyWDPW9SPrFoj9C1Gz59lFMRobqWVe0v25S
CD/7xN95cjLUufFv1fhTpJ8dW7JXUYb60qFOODMjRBNMVIdVZaj/A/K4434=

                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{0.8, 0}, {0.8, 0.18470670934716538`}}], 
                   LineBox[{{1.4, 0}, {1.4, -2.574032857099758}}], 
                   LineBox[{{0.8583784782317189, 0}, {0.8583784782317189, 
                    0.02120052118500204}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "1"], {0.8, 0.28470670934716535`}], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {1.4, 0.1}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {0.8583784782317189, 0.12120052118500205`}]}, 
                  {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
                   LineBox[{{0.865403623708278, 4.440892098500626*^-16}, {
                    0.865403623708278, 0.0002118148965740696}}]}, InsetBox[
                   
                   SubscriptBox["\<\"x\"\>", 
                    "4"], {0.865403623708278, 0.10000000000000045`}]},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.5}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 5->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwV1nk4lHsUB3BKtpIUriVdCSm00KbF15YWhbTIEiJMSNokki0tsktJki1L
lKxZilFCqz2zaszMK5Ssmcot9+2veT7PvHPmnN/7O+c5S11P2rjPEhISEhUW
Evr7+cPC9571SRfDFY75e2sNy3Hl2HKtVk1D7PWvlZxOKsf7b3yvGE1LzK3S
bFcbLMdomWm0j6YT9pfOCVyZVIFw+YnFjpq+kA8ntij1V+Jt825iv+YleMXq
hAZdrcbJDP/XVpqx2GFPk9xeVYeG6OjavZrp8HTeL/uL0og5oqfFBr2KkZfd
+/n60w/YFXI0suLQU8RKX3s/9KoTTy+4sx+01yF/Yv37GzU9oNt7rz59/iWO
SV+IME5lQmZHjEeDUTN4v7VpCZ29WNDlXrrR4S0KvTv1nMY5WKbqUxDp2oqU
4b6Ry1u5iO5dmhlzqhVrVqQuHTbiYiqtJyU5tBWm64YP22znokXR9NqD9FbQ
q9xoiyy58Fmk5PmK0YrXQYlKZ5y5cJh9LDF8RRvKBqYKs8K4eDAlY/0isw1P
nJizml5ysYl94q1xYjsO1C4MUwEPj1eclqOktiP3fM98eVMe1P39nWOz2vGH
rrV47g4eFkiHTDBK21EXf6piyJKHQaN45bOd7QhuSuWGOPGQmlPqnSvbAYHN
nuWzgnn4z1swd+7tDtBGtO09nvJwumr64Nr7HejwiaR/q+FhQEQowzaPdJw3
7UwdD133xNflPO0Ap5l94MwrHh61Kjpuo3UAQvY7d3by4KS/teikYicmE0oU
d3/joeFX6J6uu52wMmC7P1rKR5fi6amT2eT3hLRFgjof/ZvcMuYWdsIsfFrt
9HI+5p3fPmlS04ne678frtTl49CERFoJrRPTXUXK5zfxMfQl8UusXBf49lUh
wZZ8yLJzonbFdeGURoSNUQAfmv8lryNudWFDc2fsi0A+DJSv9oamdyHnMPu5
cTAfTnbH9aoedSFwt/LkhnA+Crp1GZrvurDIy6Thvxt8GH6oXCEi0Y2JlG29
39P5oNS3tNSFd8O34rNa+gs+fhosUFsX1Q2lbBux8kY+osptgwoSurHWqv+/
piY+Cgv6dW9mdCOLe1WZ/4aPb0kiScfrunFtqkxzuoOPsxSjI7K/uuHRUXw2
jctHqEzV2PFTH+Fqv2GkcIYPmeiZ3Z8CPsJPrvqHmzCBLNEdOQdCP6I/9tgi
xdkEXk53H0LcRyg9X38xUJSAaP9EreyjjwgXbVBWkiIQXbP6Sv3ARxzbG5T4
TpHAHbc8JTmXHvgUXnL6s4aAj4XCCx1KDwJf8HrO6REw1L9+3MyvB5mDR9iD
+gS4s7yrzoT2QI2SEN28gYBO1qpDHRk9mNH4HmS3lUAdpyIhrq8H6x4Up/eY
E4hv0TTIGyTjP3en/7OTgOuT25y6sR7UEGsyDuwiIBZ6YfU3YRqueYh2vLQg
YP3vtvd71GiYteJxU4A1Ad6RRnFJNxr8SkYnttoRqNy+/slSbxo63ghGttsT
uKaba2twhgaTyUUBFg5kPr+v5lIiaHA5f0NnzxEC/mkWZs3ZNAQantdUP0pg
5+VnX3oLafChaUbIuBJQ8tFNmiqj4Wz4F+9p0vVbpLkajTRUiZb3NR4jIM7s
CLnMp2FJm7HTKgoBxgvT5WlfacgbuqMsdJxA0cPyD2WTNBjJibl/IL0v8JYK
T4SO4lTVNBdvAqmK9rXGGnS4eljfdfAloHu4b+qPOx0mwtnswjME0hbiz40T
dGja2S3depaA5Pu0OYrn6JBRDnJ7TXrA+LCs/mU6RNlCPMY5AjnarWs9s+hw
tJNrpZ8nsKhfx2CygI4rwstFbQIIhGdEGYWV0FG9KGdLM2lnOXOru1Q6Nvlz
MvMvkPXOPPNp7aUjR9/VYUcQgevVSmcd++mQ1WmNzCP940xA0OAwHTGxeY9F
LhLoHtCPmv2bjrSE1OkK0mbZCQnxIgys0av4VzKYQOmRkRSVeQy837rFxIF0
fMfDvI3KDKjGXw+fJD0TLV7cqMZAD21fxtZLBHx3eFTuW8nArRuRz8JIWzxb
+srbgIy3evXorBACNf4h734YMSCp+kAMpLXWsjsjdzIwFHhFJYC0aG4K974t
A699b5j1kT7nMjWo48zAG7HigzKhBPhKB8aqPRhokzR0NyRt013yw9yXAeb5
TWcopBvipIW6zjEwbpkeEkd6ze4TYkeDGVgYfzKqjHS6yNv53y4zsHVLUVIX
aal6LfmgaAZOWB+4O0764oUrKuI3Gchr9cyUCiPwRZ+vnnyXzK+q/4EGaftv
xjpq2Qysn9eev5l0S/59/eKHDNx4rflwD+mNbr83by1lYGD0c4ED6VwVB5PX
1QxYhsvme5KWpVXtOtTAQF1wUY4f6YhE+X28FjIer/i+P+nxPWcP+7UxUFm6
5M4F0kfFOpx/9zBg+PVH/F+3Naz2jPpE1h9nePXv84YXY3z/+cyAz72RoL/x
Hm34ci7nGwPScvNO/v2/xWM7g9dOMVA7leTyN5+owtzLdb/Jek2uWv/N96e7
SLTFHCa0fxCGf+uhqLom0eYxMfbPE+2/9fYw6lPdZZmozyTk/56HebJK1rgy
E7eTrwj9Pa9yq6CCkGVMXJhIHOgkvUyS/mSeNhNutZKtpaQTGzdU3dFj4sDw
cFksaaGQm/Wam5nYd33rbU/SvRNWH4x2MXF0RtluAelY5Z5lfvuY0BdWkGSR
79/Q1OnCfTsmDp37qJdD+n6ij/qf40xcK0/9soK0dc3EBd3TTKSEZAR9Ju+b
EDew1TGQiV/PKBGZpF3WXg+sjWIiN9bolyTpBXYL2oYSmZhSsz5eQ97fhtDb
Gkp3mUheoWbtQVqt7UFbQCETDTFSkWVkP/B8X2hueMdET4lw9DKyf27e2nXR
vYuJLJp6dWUg2S91be03WeT5nJJ0MiedI/Xp4sRXJvp/LZZ2IPvRo2i644kU
C98ozvPtyX6W7wrX4sixoK9262ebP4GmaYlL0ktYeL83ztGM9HILhRW+q1gY
nm65rkrOg4HBdSHaViwMldmFPT5NIEXmWZe9LQslM9krJUjvNDBdGeXMQvPz
JxYupwgUXNvXPXCSBXa8zPfZfgS8lvtq58az8CFxlK96gpwPVt9Du1NYWHjK
co+zD4G3/hc/imSykN3gq51KzjOdpqgwtxIWnlZPWc/xIjB8LK9HtYOFu3PU
DUo8yP6JXqVrzWDB3j/ZqdOdgGV5RXgIlwVvu9fTY+Q8fTy7Ubd3nAV//4B7
6m4E/LI4EXcXsbFn3mSwszN5vz8prpE/yMZQrkuZti0BVTfBun+PkJZcc1bp
EAGr/i4DLXc2Fu6/8n7OQXL+fo0z3XyOjc645l0dNuR5/pxj65TMhkJtGsXE
kpzXC8eDc7vZSKMlIMSMnOe3WsOL2WxMXWq9ttGU7EfFR1erCDbOSdz0+mpM
vr9/KQlvvrPBe1MisACZv05vzje5XgTPYBPXgLwP29+83XCoFzWr82y8VxEY
bclrg1MvjivsVx/WIbBkT2T3To9eGBGRsd7aBAJtjD7Z+/fCTjtUx0mLwDrn
yvFLt3qx93hzrJIagfyALMXmj73YVpTxdUSWnJ+FgZ62tp+wwvKSlNQPPhyE
t7/rdvqE22Wb1E2nyP3FVnrtAY9POOv5y8x/ko9ns3J+WZ/7hOCapJzOUT4G
7N7H7E76hAqpJSyvQT4grlq+rfUTPlISdOYy+Dhf6iqUuIyD92PjNouq+XBk
N+vtW86BmMbth0OVfJiI67ov0ObgSa7JvPpyct9yEryO1ePAIrl42OkJH1kS
0Uk3jDl4+G+fVlAeHx9cKjQjnTn4ZzArVCOZzE9afG/AXQ4eW2ZWGPvyUTQa
lnvtPgfb64+5R3jzodcxPZOSzcEj4bA7DRQyv+SR0upCDr5Pv4zVd+PjsHKP
wnQtB0eazjwatiX3p+W5/GAWBxmlgbU1RuS+BLOLESp96BjQUKqS5qPSL7Qw
9n4f+t+O9SGbh6ja0XK77D7oWGpROPd5cBY9Wqee14dL6xKJ4DQexNOM22se
98FRV6ipOJkH++ZZgv7nffjaaqYycpWHPyqRJmD1wYPmp8Hy5mH72+v0EQUu
nkztTzu5ltxvNZLE9iVykU8xV79YxsWu5QqbTtziYqVnwIhwMRd1Wvco11O5
aJyduvLyQy4KtPNeN2RxseqfotHgTC4ura29oUf+TjRv7jPzOC60tvGkZbvI
+F5VVrpeXFw8oK/QI8cDJ6zFy1KFC/WITq0jd3goH3lxkhPQBwPrT+vu3+Uj
0fk3ouZxwPaLNIyJJtCVL3dh43w2Sg3spF4l9EN9kfnV8oN0yB9qpudHfsaz
CTc9vn83wBVKeHF2ACmXok+672nHHXmKlGbAIFyg4NNY3YLw9ONX13sNQcj8
sYzq+ee49yGlKdbvC0J3SOUae6Yg2DdpVOX0V4TO47AS4krrvxzVUrBzHQbV
NOacWsyr+hu/h0R6Pb6BkpjZ40hvr6/5umNkvv0IRisojEwarf6jxibuZvVR
dLkfnEqV4NRTVritTnowiq2VraZ3V/LrGw45BBkvGYNjjpBJ5IaBev3DQwWy
mWN4EmVuUd36td4nwrxnm/I4HB9Gu47ljtZf8xD/JZw0jm99GyfTx8frn6sc
nRmSncCtLPPXb6O+11f/uTJ7ZewEpv7T0X8p/aP+Q5npUIzMJKrypiwl+n/V
v1L1aIpOnMThN5NpdW9+119+ejCzT/I7ErubstZbCFEd1VhODjHfUfcl2biE
JUydrlytrC02hYhHxdE6LrOpF2cPvku+NAUjs17fz59FqPLqBkc1hARYIjyW
rpcuSj3ve2hS8oIAvcfd/fNMxamLNxxr0QwSYM+PnLLFFuJU6u9TaSbBAmz+
JeAk2ohTJWNizALDBKg8TJsbflScml7YeHPwugCjIeFZ3iHi1KYBvfUtqQKk
nb/Y6V0rTpV1k/aPfCZA6VwxM9V1EtTqlSq7M+sE5LysiCjbIkF1Gl+55DlV
gPxg/7IdphLU/DDzpslGAWqe6/NO20hQt2QEyx97L4Ba/u2ILj8Jqiv7S6VJ
rwBamnNaGh9JUMUe/Ixy4gjQcmRI3LNCglrkI+YcyBXgqzjPQPK5BHVqWk2s
tF+Apur5PvvfSVCjlOxtl44I8CbSSmZsSIK6muupvW1MgFS7to7UcQlqV8G5
mcMTAkxmHLu8/ZcEdYlBQl68QIB1Uc1P70lIUl8K3Q8q+imAqs4tAwsZSSql
pciqZVqAROOAwp8KktR58TXL+L8FCH9zQqpAVZJaYtsimJkRQKTZ39lOS5L6
P2weYJs=
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{1.4, 0}, {1.4, -2.574032857099758}}], 
                   LineBox[{{0.8583784782317189, 0}, {0.8583784782317189, 
                    0.02120052118500204}}], 
                   LineBox[{{0.865403623708278, 0}, {0.865403623708278, 
                    0.0002118148965740696}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {1.4, 0.1}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {0.8583784782317189, 0.12120052118500205`}], 
                   InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "4"], {0.865403623708278, 0.10021181489657408`}]}},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.5}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}], 6->
                GraphicsBox[{{{}, {}, 
                   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
                    
                    "]]}}, {{}, {}, 
                   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
P2weYJs=
                    "]]}}, 
                  {RGBColor[1, 0, 0], Thickness[Large], 
                   LineBox[{{1.4, 0}, {1.4, -2.574032857099758}}], 
                   LineBox[{{0.8583784782317189, 0}, {0.8583784782317189, 
                    0.02120052118500204}}], 
                   LineBox[{{0.865403623708278, 0}, {0.865403623708278, 
                    0.0002118148965740696}}]}, 
                  {RGBColor[1, 0, 0], InsetBox[
                    SubscriptBox["\<\"x\"\>", "2"], {1.4, 0.1}], InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "3"], {0.8583784782317189, 0.12120052118500205`}], 
                   InsetBox[
                    
                    SubscriptBox["\<\"x\"\>", 
                    "4"], {0.865403623708278, 0.10021181489657408`}]}, 
                  {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
                   LineBox[{{0.8654739567813344, -4.440892098500626*^-16}, {
                    0.8654739567813344, 2.2961248835606796`*^-7}}]}, 
                  InsetBox[
                   
                   SubscriptBox["\<\"x\"\>", 
                    "5"], {0.8654739567813344, 0.09999999999999956}]},
                 AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                 Axes->True,
                 AxesOrigin->{0, 0},
                 ImageSize->Large,
                 PlotRange->{All, {-3, 1.5}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{
                   Scaled[0.02], 
                   Scaled[0.02]}]}, Dynamic[$CellContext`i11$$],
                Alignment->Automatic,
                ImageSize->All],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        CurrentValue["SelectionOver"], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i11$$, \
$CellContext`i11$2084$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 6, 1}, 6, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{309., {106.09375, 111.40625}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.494462227909573*^9, 3.494462253423603*^9}, {
   3.494462329859977*^9, 3.494462382502763*^9}, {3.4944625159444103`*^9, 
   3.494462575598237*^9}, 3.494462899947534*^9, {3.494462996244816*^9, 
   3.4944630346402493`*^9}, 3.49469005537693*^9, {3.49469008749667*^9, 
   3.494690115328581*^9}, 3.494699518110858*^9, {3.494699690657526*^9, 
   3.494699714448798*^9}}]
}, {2}]],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Pseudocode for M\[UDoubleDot]ller's method", "Section",
 CellChangeTimes->{{3.4944647964623413`*^9, 3.494464808220314*^9}}],

Cell[TextData[{
 "To find a solution to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "0"}], TraditionalForm]]],
 " given an initial guess ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], ",", 
    SubscriptBox["x", "1"]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]]],
 ":\n\nStep 1.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "1"], "=", 
    RowBox[{
     SubscriptBox["x", "1"], "-", 
     SubscriptBox["x", "0"]}]}], TraditionalForm]]],
 "\nStep 2.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "2"], "=", 
    RowBox[{
     SubscriptBox["x", "2"], "-", 
     SubscriptBox["x", "1"]}]}], TraditionalForm]]],
 "\nStep 3.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Delta]", "1"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "(", 
        SubscriptBox["x", "1"], ")"}], "-", 
       RowBox[{"f", "(", 
        SubscriptBox["x", "0"], ")"}]}], ")"}], "/", 
     SubscriptBox["h", "1"]}]}], TraditionalForm]]],
 "\nStep 4.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Delta]", "2"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "(", 
        SubscriptBox["x", "2"], ")"}], "-", 
       RowBox[{"f", "(", 
        SubscriptBox["x", "1"], ")"}]}], ")"}], "/", 
     SubscriptBox["h", "2"]}]}], TraditionalForm]]],
 "\nStep 5.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Delta]", "2"], "-", 
       SubscriptBox["\[Delta]", "1"]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["h", "2"], "+", 
       SubscriptBox["h", "1"]}], ")"}]}]}], TraditionalForm]]],
 "\nStep 6.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "=", "3"}], TraditionalForm]]],
 "\n\nStep 7.  While ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"max", " ", "iterations"}]}], TraditionalForm]]],
 ", do Steps 8-23\n\t\tStep 6.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{
     SubscriptBox["\[Delta]", "2"], "+", 
     RowBox[{
      SubscriptBox["h", "2"], "d"}]}]}], TraditionalForm]]],
 "\n\t\tStep 7.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       RowBox[{"4", " ", 
        RowBox[{"f", "(", 
         SubscriptBox["x", "2"], ")"}], "d"}]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], TraditionalForm]]],
 "\n\t\t\n\t\tStep 8.  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"b", "-", "D"}], "|", 
    RowBox[{"<", 
     RowBox[{"|", 
      RowBox[{"b", "+", "D"}], "|"}]}]}], TraditionalForm]]],
 " do Step 8.\n\t\t\tStep 9.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "=", 
    RowBox[{"b", "+", "D"}]}], TraditionalForm]]],
 "\n\t\tStep 10.  Else do Step 9.\n\t\t\tStep 11.  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "=", 
    RowBox[{"b", "-", "D"}]}], TraditionalForm]]],
 "\n\n\t\tStep 12.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "=", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{
      RowBox[{"f", "(", 
       SubscriptBox["x", "2"], ")"}], "/", "E"}]}]}], TraditionalForm]]],
 "\n\t\tStep 13.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", 
    RowBox[{
     SubscriptBox["x", "2"], "+", "h"}]}], TraditionalForm]]],
 "\n\t\t\n\t\tStep 14.  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "h", "|", " ", 
    RowBox[{"<", " ", "TOL"}]}], TraditionalForm]]],
 " then end the program and output ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " as the root.\t\n\t\t\n\t\tStep 15.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    SubscriptBox["x", "1"]}], TraditionalForm]]],
 "\n\t\tStep 16.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    SubscriptBox["x", "2"]}], TraditionalForm]]],
 "\n\t\tStep 17.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], "=", "p"}], TraditionalForm]]],
 "\n\t\tStep 18.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "1"], "=", 
    RowBox[{
     SubscriptBox["x", "1"], "-", 
     SubscriptBox["x", "0"]}]}], TraditionalForm]]],
 "\n\t\tStep 19.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "2"], "=", 
    RowBox[{
     SubscriptBox["x", "2"], "-", 
     SubscriptBox["x", "1"]}]}], TraditionalForm]]],
 "\n\t\tStep 20.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Delta]", "1"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "(", 
        SubscriptBox["x", "1"], ")"}], "-", 
       RowBox[{"f", "(", 
        SubscriptBox["x", "0"], ")"}]}], ")"}], "/", 
     SubscriptBox["h", "1"]}]}], TraditionalForm]]],
 "\n\t\tStep 21.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Delta]", "2"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "(", 
        SubscriptBox["x", "2"], ")"}], "-", 
       RowBox[{"f", "(", 
        SubscriptBox["x", "1"], ")"}]}], ")"}], "/", 
     SubscriptBox["h", "2"]}]}], TraditionalForm]]],
 "\n\t\tStep 22.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Delta]", "2"], "-", 
       SubscriptBox["\[Delta]", "1"]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["h", "2"], "+", 
       SubscriptBox["h", "1"]}], ")"}]}]}], TraditionalForm]]],
 "\n\t\tStep 23.  Set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "=", 
    RowBox[{"i", "+", "1"}]}], TraditionalForm]]],
 "\n\t\t\nStep 24.  Print \"Method failed to converge after 'max iterations'.\
\""
}], "Text",
 CellChangeTimes->{{3.493947097547254*^9, 3.4939474220747347`*^9}, {
  3.49418495551639*^9, 3.494185210174735*^9}, {3.49418565908498*^9, 
  3.494185659502884*^9}, {3.494464957948147*^9, 3.494465171017891*^9}, {
  3.494465205972748*^9, 3.494465351946155*^9}, {3.494465387568959*^9, 
  3.494465776715814*^9}, {3.495936231577389*^9, 3.495936232371554*^9}}],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Deflation with M\[UDoubleDot]ller's method", "Section",
 CellChangeTimes->{{3.4944647964623413`*^9, 3.494464808220314*^9}, {
  3.494465868214707*^9, 3.4944658723973007`*^9}}],

Cell["\<\
Just as we discussed the use of Newton's method with deflation we can use the \
same technique to solve for all the roots, both real and complex, of a \
polynomial using M\[UDoubleDot]ller's method.  We start with an initial guess \
to a root, solve for that root using M\[UDoubleDot]ller's method, then use \
synthetic division to reduce the polynomial by one order and repeat the \
process.  For a truly robust algorithm it is recommended that after finding \
the root of the deflated equation, one should go back and use the deflated \
root as an initial guess in the full polynomial.  This ensures that the root \
is a root of the original polynomial not the deflated one and avoids the \
trouble of round off error.\
\>", "Text",
 CellChangeTimes->{{3.494465888925664*^9, 3.494466116088297*^9}, {
  3.494466147156085*^9, 3.4944661506036177`*^9}, {3.494466183056631*^9, 
  3.494466183274469*^9}}],

Cell[TextData[{
 ButtonBox["\[FilledLeftTriangle]\[ThickSpace]\[ThickSpace]\[ThickSpace]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowPrevSlideText"]],
 "\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]",
 ButtonBox["\[ThickSpace]\[ThickSpace]\[ThickSpace]\[FilledRightTriangle]",
  BaseStyle->"SlidePreviousNextLink",
  Appearance->{Automatic, None},
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`ButtonNotebook[], "ScrollPageNext"]}],
  ButtonNote->FEPrivate`FrontEndResource[
   "FEStrings", "SlideshowNextSlideText"]]
}], "PreviousNext"]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{762, 657},
WindowMargins->{{Automatic, 75}, {Automatic, 37}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 0.5, 0.5 Inherited],
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[567, 22, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[6066, 205, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[10738, 363, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[14656, 496, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[19807, 657, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[29988, 982, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[223291, 4748, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[230524, 5007, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 233005, 5069}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[656, 27, 103, 1, 56, "Section"],
Cell[762, 30, 4471, 149, 357, "Text"],
Cell[5236, 181, 781, 18, 22, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6066, 205, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[6155, 210, 107, 1, 56, "Section"],
Cell[6265, 213, 2659, 89, 108, "Text"],
Cell[8927, 304, 978, 33, 37, "Text"],
Cell[9908, 339, 781, 18, 22, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10738, 363, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[10827, 368, 163, 2, 56, "Section"],
Cell[10993, 372, 2830, 98, 216, "Text"],
Cell[13826, 472, 781, 18, 22, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14656, 496, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[14745, 501, 96, 1, 56, "Section"],
Cell[14844, 504, 4111, 125, 263, "Text"],
Cell[18958, 631, 16, 0, 22, "Text"],
Cell[18977, 633, 781, 18, 22, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19807, 657, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[19896, 662, 88, 1, 56, "Section"],
Cell[19987, 665, 9168, 291, 624, "Text"],
Cell[29158, 958, 781, 18, 22, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29988, 982, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[30077, 987, 176, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[30278, 993, 17235, 474, 318, "Input"],
Cell[47516, 1469, 88291, 1549, 239, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[135841, 3023, 17071, 471, 138, "Input"],
Cell[152915, 3496, 69534, 1225, 241, "Output"]
}, {2}]],
Cell[222461, 4724, 781, 18, 22, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[223291, 4748, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[223380, 4753, 129, 1, 56, "Section"],
Cell[223512, 4756, 6179, 225, 514, "Text"],
Cell[229694, 4983, 781, 18, 22, "PreviousNext"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230524, 5007, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[230613, 5012, 180, 2, 14, "Section"],
Cell[230796, 5016, 910, 14, 20, "Text"],
Cell[231709, 5032, 781, 18, 5, "PreviousNext"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
